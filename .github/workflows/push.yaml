name: "Push"
on:
  push:

jobs:
  checkout:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # - uses: actions/setup-node@v1
      #   name: "setup node"
      #   with:
      #     node-version: "13.x"
      # - name: "client"
      #   run: cd client && npm ci
      # - name: "server"
      #   run: cd server && npm ci
  test:
    runs-on: ubuntu-20.04
    needs: [checkout]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        name: "setup node"
        with:
          node-version: "13.x"
      - name: "client"
        run: echo 'Test client'
      - name: "server"
        run: echo 'Test server'
      - name: "env"
        run: echo "TAG_NAME = cat package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g'
              | tr -d '[[:space:]]'" >> $GITHUB_ENV
      - name: "env":
        run: echo "${{ env.TAG_NAME }}"
        
  # build:
  #     runs-on: ubuntu-20.04
  #     needs: [test]
  #     steps:
  #         - uses: actions/checkout@v2
  #           name: 'Checkout'
  #         - uses: docker/login-action@v1
  #           name: 'Docker login'
  #           with:
  #               username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #               password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #         - uses: docker/setup-buildx-action@v1
  #           name: Set up Docker Buildx
  #           id: buildx
  #         - uses: docker/build-push-action@v2
  #           id: docker_build
  #           with:
  #               context: ./
  #               file: ./Dockerfile
  #               push: true
  #               tags: ${{ secrets.DOCKER_HUB_USERNAME }}/lombard:latest
  # deploy:
  #     runs-on: ubuntu-20.04
  #     needs: [build]
  #     steps:
  #         - uses: appleboy/ssh-action@master
  #           name: 'Ssh connect'
  #           with:
  #               host: ${{ secrets.SSH_HOST_NAME }}
  #               username: ${{ secrets.SSH_USER_NAME }}
  #               key: ${{ secrets.SSH_SECRET_KEY }}
  #               script: |
  #                   cd ~/lombard
  #                   git pull origin master
  #                   docker ps -aq | xargs docker stop | xargs docker rm
  #                   docker-compose up -d --build
  #                   echo 'OK'
